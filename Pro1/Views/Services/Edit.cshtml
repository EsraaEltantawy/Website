@model Pro1.Models.Service

@{ 
    ViewBag.Title = "Edit";
    Layout = "~/Views/Shared/_Layout2.cshtml";

}

<h2 class="text-center alert alert-info">Edit</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Service</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.sr_Id)

        <div class="form-group">
            @Html.LabelFor(model => model.sr_Name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.sr_Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.sr_Name, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.sr_Dis, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.sr_Dis, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.sr_Dis, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.sr_Class, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.sr_Class, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.sr_Class, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-outline-dark" />
            </div>
        </div>
    </div>
}


<div>
    @Html.ActionLink("Back to List", "AdminIndex", null, new { @class = "btn btn-outline-info" })
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
